The ``5-text_indentation.py`` module
======================

Using ``text_indentation``
-------------------

This is an example text file in reStructuredText format.  First import
``text_indentation`` from the ``5-text_indentation`` module:

    >>> text_indentation = __import__("5-text_indentation").text_indentation

Now use it:
    >>> text_indentation("")
    <BLANKLINE>

    >>> text_indentation(665.47)
    Traceback (most recent call last):
    ...
    TypeError: object of type 'float' has no len()

    >>> text_indentation(55)
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

    >>> text_indentation(NONE)
    Traceback (most recent call last):
    ...
    NameError: name 'NONE' is not defined

    >>> text_indentation("hola.", "alguien aqui")
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() takes 1 positional argument but 2 were given

    #CHECK FOR PEP8 STYLE
    >>> import os
    >>> os.popen("pep8 5-text_indentation.py").read()
    ''

    #CHECK FOR COMMENTS LENGHT OF THE SHEBANG
    >>> comments = __import__("5-text_indentation").__doc__
    >>> len(comments) > 4
    True

    #CHECK FOR FUNCTION COMMENTS LENGHT
    >>> comments = __import__("5-text_indentation").text_indentation.__doc__
    >>> len(comments) > 2
    True

    >>> text_indentation("hola.... alguien?")
    hola.
    <BLANKLINE>
    .
    <BLANKLINE>
     alguien?
    <BLANKLINE>
    <BLANKLINE>

    #CHECK IF README FILE EXISTS
    >>> import os
    >>> is_readme = os.getcwd() + '/README.md'
    >>> os.path.exists(is_readme)
    True

    # CHECK IF FILE IS EXCECUTABLE
    >>> import os
    >>> path_file = os.getcwd() + '/5-text_indentation.py'
    >>> os.access(path_file, os.X_OK)
    True

    #CHECK FOR SHEBANG
    >>> with open("5-text_indentation.py", "r") as file:
    ...     first_line = file.readline()
    ...
    >>> first_line == '#!/usr/bin/python3\n'
    True

    #CHECK FOR EMPTY LAST LINE
    >>> with open("5-text_indentation.py", "r") as file:
    ...     for last_line in file:
    ...             pass
    ...
    >>> last_line [-1] == '\n'
    True

    #CHECK IF README IS NOT EMPTY
    >>> import os
    >>> is_readme = os.getcwd() + '/README.md'
    >>> os.stat(is_readme).st_size == 0
    False
